// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetworkApi.Core.Data;

#nullable disable

namespace SocialNetworkApi.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220613113749_v.1.0.0")]
    partial class v100
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SocialNetworkApi.Core.Entities.ApplicationRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ApplicationRole");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("SocialNetworkApi.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "$2a$11$KW4TFQZ7LFHqTMkdk34Tnu6XRnmfMDdHgJzhgtqvhUmjytp/ZJf2O",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "blowe@mail.com",
                            FirstName = "Barrett",
                            Gender = "MASC",
                            LastName = "Lowe",
                            PasswordHash = "$2a$11$5t.3J63THAXaXIqVKH62YOBtMw3QGBobHSgLJeZmKBymPEBZEvvje",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "cdisney@mail.com",
                            FirstName = "Curtis",
                            Gender = "MASC",
                            LastName = "Disney",
                            PasswordHash = "$2a$11$TO6FRJmBL2.8Uho47Ob1R.W8pTlQCu3jsyNmAjFjwZqte0/1XbCjO",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "sowston@mail.com",
                            FirstName = "Stafford",
                            Gender = "MASC",
                            LastName = "Owston",
                            PasswordHash = "$2a$11$SJqy1S76/jdgfSdBFDfFwuPHQyUZ9cbcMH1Y0ivGM2nATLn4TiQTW",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            Email = "klowe@mail.com",
                            FirstName = "Kira",
                            Gender = "FEM",
                            LastName = "Lowe",
                            PasswordHash = "$2a$11$0I.FQrf9612ykfm9Ed0qI.tt8Is32mWcmabMz58XK4WLeGhYbqJcS",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            Email = "khaward@mail.com",
                            FirstName = "Kira",
                            Gender = "FEM",
                            LastName = "Haward",
                            PasswordHash = "$2a$11$BATO5L1pVodZme3/4vM4VO1C9g0wOhUQr73Q8WjTnCJX1N5alGNym",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 7,
                            Email = "rlowe@mail.com",
                            FirstName = "Ronda",
                            Gender = "FEM",
                            LastName = "Lowe",
                            PasswordHash = "$2a$11$E5lz7reF0awJLJ9/QqZ4ou2RBFTbKLm2z0XLYBnnvAnrIdFSQ0aNK",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 8,
                            Email = "esweet@mail.com",
                            FirstName = "Everett",
                            Gender = "MASC",
                            LastName = "Sweet",
                            PasswordHash = "$2a$11$E70Apq5prmS58ndfHtAKsOFf6KJyGN3uBuDATs1XpXj3IkP/84GGW",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            Email = "dnicolson@mail.com",
                            FirstName = "Doyle",
                            Gender = "MASC",
                            LastName = "Nicolson",
                            PasswordHash = "$2a$11$ihLUbWcJVIwlwmfh3emf0.ZXGR2vyA4nDOzG7XuL449sCjAvj.BOC",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 10,
                            Email = "pclaus@mail.com",
                            FirstName = "Pablo",
                            Gender = "MASC",
                            LastName = "Claus",
                            PasswordHash = "$2a$11$Fb1WlLznUhZekbSvioGeCuMlK7dXUuwJzAaAefIuGbSVzD8vEV1H2",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("SocialNetworkApi.Core.Entities.ApplicationUser", b =>
                {
                    b.HasOne("SocialNetworkApi.Core.Entities.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
